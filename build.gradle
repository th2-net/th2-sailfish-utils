plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id "com.jfrog.bintray" version '1.8.5'
}

ext {
    sharedDir           = file("${project.rootDir}/shared")

    sailfishVersion     = '3.2-SNAPSHOT'
}

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenCentral()
    maven {
        name 'Bintray th2'
        url 'https://dl.bintray.com/exactpro/th2'
    }
    maven {
        name 'Bintray sf'
        url 'https://dl.bintray.com/exactpro/sailfish'
    }
    maven {
        name 'Artifactory-snapshot-oss'
        url 'https://oss.jfrog.org/artifactory/libs-snapshot'
    }
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    api platform('com.exactpro.th2:bom:2.10.1')
    api 'com.exactpro.th2:common:3.0.3'
    api "com.exactpro.sf:sailfish-core:${sailfishVersion}"

    implementation "org.slf4j:slf4j-log4j12"
    implementation "org.slf4j:slf4j-api"

    implementation "com.google.protobuf:protobuf-java-util"

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
        bintrayPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId rootProject.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('name', rootProject.name)
                root.appendNode('url', project.vcs_url)
            }
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

bintray {
    user = "${bintray_user}"
    key = "${bintray_key}"
    publications = ['bintrayPublication']
    pkg {
        repo = 'th2'
        name = rootProject.name
        userOrg = 'exactpro'
        licenses = ['Apache-2.0']
        vcsUrl = project.vcs_url
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
    publish = true
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}